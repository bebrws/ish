

# \s+\+[\d]+\s+[0-9a-fA-F]+\s+[0-9a-fA-F]+

.global _gadget_load32_addr
_gadget_load32_addr:
                movl          %r13d,                        %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_gs
_gadget_load16_gs:
        movw          0x158(%r11),                  %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_gs
_gadget_store16_gs:
        movw          %r10w,                        0x158(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_imm
_gadget_load8_imm:
                movb          (%r9),                        %r10b
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_mem
_gadget_load8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x69
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x82
            addq          0x8(%r12,%r14),               %r13

.global back_load8_mem
back_load8_mem:
                movb          (%r13),                       %r10b
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_a
_gadget_load8_reg_a:
                movb          %al,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_b
_gadget_load8_reg_b:
                movb          %bl,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_c
_gadget_load8_reg_c:
                movb          %cl,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_d
_gadget_load8_reg_d:
                movb          %dl,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_si
_gadget_load8_reg_si:
                    xchgb         %dh,                          %dl
                movb          %dl,                          %r10b
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_di
_gadget_load8_reg_di:
                    xchgb         %bh,                          %bl
                movb          %bl,                          %r10b
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_sp
_gadget_load8_reg_sp:
                    xchgb         %ah,                          %al
                movb          %al,                          %r10b
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load8_reg_bp
_gadget_load8_reg_bp:
                    xchgb         %ch,                          %cl
                movb          %cl,                          %r10b
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_imm
_gadget_load16_imm:
                movw          (%r9),                        %r10w
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_mem
_gadget_load16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x13a
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x153
            addq          0x8(%r12,%r14),               %r13

.global back_load16_mem
back_load16_mem:
            movw          (%r13),                       %r10w
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_a
_gadget_load16_reg_a:
                movw          %ax,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_b
_gadget_load16_reg_b:
                movw          %bx,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_c
_gadget_load16_reg_c:
                movw          %cx,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_d
_gadget_load16_reg_d:
                movw          %dx,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_si
_gadget_load16_reg_si:
                movw          %si,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_di
_gadget_load16_reg_di:
                movw          %di,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_sp
_gadget_load16_reg_sp:
                movw          %r8w,                         %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load16_reg_bp
_gadget_load16_reg_bp:
                movw          %bp,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_imm
_gadget_load32_imm:
                movl          (%r9),                        %r10d
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_mem
_gadget_load32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x203
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x21c
            addq          0x8(%r12,%r14),               %r13

.global back_load32_mem
back_load32_mem:
                movl          (%r13),                       %r10d
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_a
_gadget_load32_reg_a:
                movl          %eax,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_b
_gadget_load32_reg_b:
                movl          %ebx,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_c
_gadget_load32_reg_c:
                movl          %ecx,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_d
_gadget_load32_reg_d:
                movl          %edx,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_si
_gadget_load32_reg_si:
                movl          %esi,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_di
_gadget_load32_reg_di:
                movl          %edi,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_sp
_gadget_load32_reg_sp:
                movl          %r8d,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_load32_reg_bp
_gadget_load32_reg_bp:
                movl          %ebp,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_mem
_gadget_store8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x2b8
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x2d2
            addq          0x8(%r12,%r14),               %r13

.global back_store8_mem
back_store8_mem:
                movb          %r10b,                        (%r13)
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x2eb

.global back_write_done_store8_mem
back_write_done_store8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_a
_gadget_store8_reg_a:
                movb          %r10b,                        %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_b
_gadget_store8_reg_b:
                movb          %r10b,                        %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_c
_gadget_store8_reg_c:
                movb          %r10b,                        %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_d
_gadget_store8_reg_d:
                movb          %r10b,                        %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_si
_gadget_store8_reg_si:
                    xchgb         %dh,                          %dl
                movb          %r10b,                        %dl
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_di
_gadget_store8_reg_di:
                    xchgb         %bh,                          %bl
                movb          %r10b,                        %bl
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_sp
_gadget_store8_reg_sp:
                    xchgb         %ah,                          %al
                movb          %r10b,                        %al
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store8_reg_bp
_gadget_store8_reg_bp:
                    xchgb         %ch,                          %cl
                movb          %r10b,                        %cl
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_mem
_gadget_store16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x38e
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x3a8
            addq          0x8(%r12,%r14),               %r13

.global back_store16_mem
back_store16_mem:
            movw          %r10w,                        (%r13)
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x3c2

.global back_write_done_store16_mem
back_write_done_store16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_a
_gadget_store16_reg_a:
                movw          %r10w,                        %ax
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_b
_gadget_store16_reg_b:
                movw          %r10w,                        %bx
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_c
_gadget_store16_reg_c:
                movw          %r10w,                        %cx
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_d
_gadget_store16_reg_d:
                movw          %r10w,                        %dx
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_si
_gadget_store16_reg_si:
                movw          %r10w,                        %si
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_di
_gadget_store16_reg_di:
                movw          %r10w,                        %di
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_sp
_gadget_store16_reg_sp:
                movw          %r10w,                        %r8w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store16_reg_bp
_gadget_store16_reg_bp:
                movw          %r10w,                        %bp
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_mem
_gadget_store32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x45d
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x477
            addq          0x8(%r12,%r14),               %r13

.global back_store32_mem
back_store32_mem:
                movl          %r10d,                        (%r13)
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x490

.global back_write_done_store32_mem
back_write_done_store32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_a
_gadget_store32_reg_a:
                movl          %r10d,                        %eax
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_b
_gadget_store32_reg_b:
                movl          %r10d,                        %ebx
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_c
_gadget_store32_reg_c:
                movl          %r10d,                        %ecx
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_d
_gadget_store32_reg_d:
                movl          %r10d,                        %edx
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_si
_gadget_store32_reg_si:
                movl          %r10d,                        %esi
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_di
_gadget_store32_reg_di:
                movl          %r10d,                        %edi
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_sp
_gadget_store32_reg_sp:
                movl          %r10d,                        %r8d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_store32_reg_bp
_gadget_store32_reg_bp:
                movl          %r10d,                        %ebp
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_imm
_gadget_xchg8_imm:
                xchgb         %r10b,                        (%r9)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_mem
_gadget_xchg8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x52e
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x547
            addq          0x8(%r12,%r14),               %r13

.global back_xchg8_mem
back_xchg8_mem:
                xchgb         %r10b,                        (%r13)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_a
_gadget_xchg8_reg_a:
                xchgb         %al,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_b
_gadget_xchg8_reg_b:
                xchgb         %bl,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_c
_gadget_xchg8_reg_c:
                xchgb         %cl,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_d
_gadget_xchg8_reg_d:
                xchgb         %dl,                          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_si
_gadget_xchg8_reg_si:
                    xchgb         %dh,                          %dl
                xchgb         %dl,                          %r10b
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_di
_gadget_xchg8_reg_di:
                    xchgb         %bh,                          %bl
                xchgb         %bl,                          %r10b
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_sp
_gadget_xchg8_reg_sp:
                    xchgb         %ah,                          %al
                xchgb         %al,                          %r10b
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg8_reg_bp
_gadget_xchg8_reg_bp:
                    xchgb         %ch,                          %cl
                xchgb         %cl,                          %r10b
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_imm
_gadget_xchg16_imm:
                xchgw         %r10w,                        (%r9)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_mem
_gadget_xchg16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x5ff
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x618
            addq          0x8(%r12,%r14),               %r13

.global back_xchg16_mem
back_xchg16_mem:
            xchgw         %r10w,                        (%r13)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_a
_gadget_xchg16_reg_a:
                xchgw         %r10w,                        %ax
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_b
_gadget_xchg16_reg_b:
                xchgw         %bx,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_c
_gadget_xchg16_reg_c:
                xchgw         %cx,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_d
_gadget_xchg16_reg_d:
                xchgw         %dx,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_si
_gadget_xchg16_reg_si:
                xchgw         %si,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_di
_gadget_xchg16_reg_di:
                xchgw         %di,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_sp
_gadget_xchg16_reg_sp:
                xchgw         %r8w,                         %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg16_reg_bp
_gadget_xchg16_reg_bp:
                xchgw         %bp,                          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_imm
_gadget_xchg32_imm:
                xchgl         %r10d,                        (%r9)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_mem
_gadget_xchg32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x6c7
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6e0
            addq          0x8(%r12,%r14),               %r13

.global back_xchg32_mem
back_xchg32_mem:
                xchgl         %r10d,                        (%r13)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_a
_gadget_xchg32_reg_a:
                    xchgl         %r10d,                        %eax
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_b
_gadget_xchg32_reg_b:
                xchgl         %ebx,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_c
_gadget_xchg32_reg_c:
                xchgl         %ecx,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_d
_gadget_xchg32_reg_d:
                xchgl         %edx,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_si
_gadget_xchg32_reg_si:
                xchgl         %esi,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_di
_gadget_xchg32_reg_di:
                xchgl         %edi,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_sp
_gadget_xchg32_reg_sp:
                xchgl         %r8d,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xchg32_reg_bp
_gadget_xchg32_reg_bp:
                xchgl         %ebp,                         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_imm
_gadget_add8_imm:
                movb          (%r9),                        %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          (%r9),                        %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_mem
_gadget_add8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x7c2
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x7db
            addq          0x8(%r12,%r14),               %r13

.global back_add8_mem
back_add8_mem:
                movb          (%r13),                       %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          (%r13),                       %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_a
_gadget_add8_reg_a:
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_b
_gadget_add8_reg_b:
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_c
_gadget_add8_reg_c:
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_d
_gadget_add8_reg_d:
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_si
_gadget_add8_reg_si:
                    xchgb         %dh,                          %dl
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_di
_gadget_add8_reg_di:
                    xchgb         %bh,                          %bl
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_sp
_gadget_add8_reg_sp:
                    xchgb         %ah,                          %al
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add8_reg_bp
_gadget_add8_reg_bp:
                    xchgb         %ch,                          %cl
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_imm
_gadget_add16_imm:
                movw          (%r9),                        %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          (%r9),                        %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_mem
_gadget_add16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0xaef
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0xb08
            addq          0x8(%r12,%r14),               %r13

.global back_add16_mem
back_add16_mem:
            movw          (%r13),                       %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
            addw          (%r13),                       %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_a
_gadget_add16_reg_a:
                movw          %ax,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %ax,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_b
_gadget_add16_reg_b:
                movw          %bx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %bx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_c
_gadget_add16_reg_c:
                movw          %cx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %cx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_d
_gadget_add16_reg_d:
                movw          %dx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %dx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_si
_gadget_add16_reg_si:
                movw          %si,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %si,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_di
_gadget_add16_reg_di:
                movw          %di,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %di,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_sp
_gadget_add16_reg_sp:
                movw          %r8w,                         %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %r8w,                         %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add16_reg_bp
_gadget_add16_reg_bp:
                movw          %bp,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %bp,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_imm
_gadget_add32_imm:
                movl          (%r9),                        %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          (%r9),                        %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_mem
_gadget_add32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0xe28
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0xe41
            addq          0x8(%r12,%r14),               %r13

.global back_add32_mem
back_add32_mem:
                movl          (%r13),                       %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          (%r13),                       %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_a
_gadget_add32_reg_a:
                movl          %eax,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %eax,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_b
_gadget_add32_reg_b:
                movl          %ebx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %ebx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_c
_gadget_add32_reg_c:
                movl          %ecx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %ecx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_d
_gadget_add32_reg_d:
                movl          %edx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %edx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_si
_gadget_add32_reg_si:
                movl          %esi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %esi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_di
_gadget_add32_reg_di:
                movl          %edi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %edi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_sp
_gadget_add32_reg_sp:
                movl          %r8d,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %r8d,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_add32_reg_bp
_gadget_add32_reg_bp:
                movl          %ebp,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %ebp,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_imm
_gadget_sub8_imm:
                movb          (%r9),                        %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          (%r9),                        %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_mem
_gadget_sub8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x111d
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x1136
            addq          0x8(%r12,%r14),               %r13

.global back_sub8_mem
back_sub8_mem:
                movb          (%r13),                       %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          (%r13),                       %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_a
_gadget_sub8_reg_a:
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_b
_gadget_sub8_reg_b:
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_c
_gadget_sub8_reg_c:
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_d
_gadget_sub8_reg_d:
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_si
_gadget_sub8_reg_si:
                    xchgb         %dh,                          %dl
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_di
_gadget_sub8_reg_di:
                    xchgb         %bh,                          %bl
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_sp
_gadget_sub8_reg_sp:
                    xchgb         %ah,                          %al
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub8_reg_bp
_gadget_sub8_reg_bp:
                    xchgb         %ch,                          %cl
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_imm
_gadget_sub16_imm:
                movw          (%r9),                        %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          (%r9),                        %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_mem
_gadget_sub16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x144a
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x1463
            addq          0x8(%r12,%r14),               %r13

.global back_sub16_mem
back_sub16_mem:
            movw          (%r13),                       %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
            subw          (%r13),                       %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_a
_gadget_sub16_reg_a:
                movw          %ax,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %ax,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_b
_gadget_sub16_reg_b:
                movw          %bx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %bx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_c
_gadget_sub16_reg_c:
                movw          %cx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %cx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_d
_gadget_sub16_reg_d:
                movw          %dx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %dx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_si
_gadget_sub16_reg_si:
                movw          %si,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %si,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_di
_gadget_sub16_reg_di:
                movw          %di,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %di,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_sp
_gadget_sub16_reg_sp:
                movw          %r8w,                         %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %r8w,                         %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub16_reg_bp
_gadget_sub16_reg_bp:
                movw          %bp,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %bp,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_imm
_gadget_sub32_imm:
                movl          (%r9),                        %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          (%r9),                        %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_mem
_gadget_sub32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x1783
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x179c
            addq          0x8(%r12,%r14),               %r13

.global back_sub32_mem
back_sub32_mem:
                movl          (%r13),                       %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          (%r13),                       %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_a
_gadget_sub32_reg_a:
                movl          %eax,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %eax,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_b
_gadget_sub32_reg_b:
                movl          %ebx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %ebx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_c
_gadget_sub32_reg_c:
                movl          %ecx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %ecx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_d
_gadget_sub32_reg_d:
                movl          %edx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %edx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_si
_gadget_sub32_reg_si:
                movl          %esi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %esi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_di
_gadget_sub32_reg_di:
                movl          %edi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %edi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_sp
_gadget_sub32_reg_sp:
                movl          %r8d,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %r8d,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sub32_reg_bp
_gadget_sub32_reg_bp:
                movl          %ebp,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %ebp,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_imm
_gadget_adc8_imm:
                movb          (%r9),                        %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          (%r9),                        %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_mem
_gadget_adc8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x1a82
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x1a9b
            addq          0x8(%r12,%r14),               %r13

.global back_adc8_mem
back_adc8_mem:
                movb          (%r13),                       %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          (%r13),                       %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_a
_gadget_adc8_reg_a:
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_b
_gadget_adc8_reg_b:
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_c
_gadget_adc8_reg_c:
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_d
_gadget_adc8_reg_d:
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_si
_gadget_adc8_reg_si:
                    xchgb         %dh,                          %dl
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_di
_gadget_adc8_reg_di:
                    xchgb         %bh,                          %bl
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_sp
_gadget_adc8_reg_sp:
                    xchgb         %ah,                          %al
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc8_reg_bp
_gadget_adc8_reg_bp:
                    xchgb         %ch,                          %cl
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_imm
_gadget_adc16_imm:
                movw          (%r9),                        %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          (%r9),                        %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_mem
_gadget_adc16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x1e13
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x1e2c
            addq          0x8(%r12,%r14),               %r13

.global back_adc16_mem
back_adc16_mem:
            movw          (%r13),                       %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
            adcw          (%r13),                       %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_a
_gadget_adc16_reg_a:
                movw          %ax,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %ax,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_b
_gadget_adc16_reg_b:
                movw          %bx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %bx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_c
_gadget_adc16_reg_c:
                movw          %cx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %cx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_d
_gadget_adc16_reg_d:
                movw          %dx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %dx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_si
_gadget_adc16_reg_si:
                movw          %si,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %si,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_di
_gadget_adc16_reg_di:
                movw          %di,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %di,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_sp
_gadget_adc16_reg_sp:
                movw          %r8w,                         %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %r8w,                         %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc16_reg_bp
_gadget_adc16_reg_bp:
                movw          %bp,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcw          %bp,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_imm
_gadget_adc32_imm:
                movl          (%r9),                        %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          (%r9),                        %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_mem
_gadget_adc32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x21b0
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x21c9
            addq          0x8(%r12,%r14),               %r13

.global back_adc32_mem
back_adc32_mem:
                movl          (%r13),                       %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          (%r13),                       %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_a
_gadget_adc32_reg_a:
                movl          %eax,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %eax,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_b
_gadget_adc32_reg_b:
                movl          %ebx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %ebx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_c
_gadget_adc32_reg_c:
                movl          %ecx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %ecx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_d
_gadget_adc32_reg_d:
                movl          %edx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %edx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_si
_gadget_adc32_reg_si:
                movl          %esi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %esi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_di
_gadget_adc32_reg_di:
                movl          %edi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %edi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_sp
_gadget_adc32_reg_sp:
                movl          %r8d,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %r8d,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_adc32_reg_bp
_gadget_adc32_reg_bp:
                movl          %ebp,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                adcl          %ebp,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_imm
_gadget_sbb8_imm:
                movb          (%r9),                        %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          (%r9),                        %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_mem
_gadget_sbb8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x2509
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x2522
            addq          0x8(%r12,%r14),               %r13

.global back_sbb8_mem
back_sbb8_mem:
                movb          (%r13),                       %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          (%r13),                       %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_a
_gadget_sbb8_reg_a:
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_b
_gadget_sbb8_reg_b:
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_c
_gadget_sbb8_reg_c:
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_d
_gadget_sbb8_reg_d:
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_si
_gadget_sbb8_reg_si:
                    xchgb         %dh,                          %dl
                movb          %dl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %dl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_di
_gadget_sbb8_reg_di:
                    xchgb         %bh,                          %bl
                movb          %bl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %bl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_sp
_gadget_sbb8_reg_sp:
                    xchgb         %ah,                          %al
                movb          %al,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %al,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb8_reg_bp
_gadget_sbb8_reg_bp:
                    xchgb         %ch,                          %cl
                movb          %cl,                          %r14b
        movb          %r14b,                        0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbb          %cl,                          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_imm
_gadget_sbb16_imm:
                movw          (%r9),                        %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          (%r9),                        %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_mem
_gadget_sbb16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x289a
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x28b3
            addq          0x8(%r12,%r14),               %r13

.global back_sbb16_mem
back_sbb16_mem:
            movw          (%r13),                       %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
            sbbw          (%r13),                       %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_a
_gadget_sbb16_reg_a:
                movw          %ax,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %ax,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_b
_gadget_sbb16_reg_b:
                movw          %bx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %bx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_c
_gadget_sbb16_reg_c:
                movw          %cx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %cx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_d
_gadget_sbb16_reg_d:
                movw          %dx,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %dx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_si
_gadget_sbb16_reg_si:
                movw          %si,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %si,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_di
_gadget_sbb16_reg_di:
                movw          %di,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %di,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_sp
_gadget_sbb16_reg_sp:
                movw          %r8w,                         %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %r8w,                         %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb16_reg_bp
_gadget_sbb16_reg_bp:
                movw          %bp,                          %r14w
        movw          %r14w,                        0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbw          %bp,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_imm
_gadget_sbb32_imm:
                movl          (%r9),                        %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          (%r9),                        %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_mem
_gadget_sbb32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x2c37
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x2c50
            addq          0x8(%r12,%r14),               %r13

.global back_sbb32_mem
back_sbb32_mem:
                movl          (%r13),                       %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          (%r13),                       %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_a
_gadget_sbb32_reg_a:
                movl          %eax,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %eax,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_b
_gadget_sbb32_reg_b:
                movl          %ebx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %ebx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_c
_gadget_sbb32_reg_c:
                movl          %ecx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %ecx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_d
_gadget_sbb32_reg_d:
                movl          %edx,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %edx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_si
_gadget_sbb32_reg_si:
                movl          %esi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %esi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_di
_gadget_sbb32_reg_di:
                movl          %edi,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %edi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_sp
_gadget_sbb32_reg_sp:
                movl          %r8d,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %r8d,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sbb32_reg_bp
_gadget_sbb32_reg_bp:
                movl          %ebp,                         %r14d
        movl          %r14d,                        0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
    btw           $0x0,                         0xbc(%r11)
                sbbl          %ebp,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_imm
_gadget_and8_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          (%r9),                        %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_mem
_gadget_and8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x2f83
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x2f9c
            addq          0x8(%r12,%r14),               %r13

.global back_and8_mem
back_and8_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          (%r13),                       %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_a
_gadget_and8_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %al,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_b
_gadget_and8_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %bl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_c
_gadget_and8_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %cl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_d
_gadget_and8_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %dl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_si
_gadget_and8_reg_si:
                    xchgb         %dh,                          %dl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %dl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_di
_gadget_and8_reg_di:
                    xchgb         %bh,                          %bl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %bl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_sp
_gadget_and8_reg_sp:
                    xchgb         %ah,                          %al
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %al,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and8_reg_bp
_gadget_and8_reg_bp:
                    xchgb         %ch,                          %cl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andb          %cl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_imm
_gadget_and16_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          (%r9),                        %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_mem
_gadget_and16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x328e
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x32a7
            addq          0x8(%r12,%r14),               %r13

.global back_and16_mem
back_and16_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
            andw          (%r13),                       %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_a
_gadget_and16_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %ax,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_b
_gadget_and16_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %bx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_c
_gadget_and16_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %cx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_d
_gadget_and16_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %dx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_si
_gadget_and16_reg_si:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %si,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_di
_gadget_and16_reg_di:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %di,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_sp
_gadget_and16_reg_sp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %r8w,                         %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and16_reg_bp
_gadget_and16_reg_bp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andw          %bp,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_imm
_gadget_and32_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          (%r9),                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_mem
_gadget_and32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x358d
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x35a6
            addq          0x8(%r12,%r14),               %r13

.global back_and32_mem
back_and32_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          (%r13),                       %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_a
_gadget_and32_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %eax,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_b
_gadget_and32_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %ebx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_c
_gadget_and32_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %ecx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_d
_gadget_and32_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %edx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_si
_gadget_and32_reg_si:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %esi,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_di
_gadget_and32_reg_di:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %edi,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_sp
_gadget_and32_reg_sp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %r8d,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_and32_reg_bp
_gadget_and32_reg_bp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                andl          %ebp,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_imm
_gadget_or8_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           (%r9),                        %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_mem
_gadget_or8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x3863
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x387c
            addq          0x8(%r12,%r14),               %r13

.global back_or8_mem
back_or8_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           (%r13),                       %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_a
_gadget_or8_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %al,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_b
_gadget_or8_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %bl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_c
_gadget_or8_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %cl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_d
_gadget_or8_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %dl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_si
_gadget_or8_reg_si:
                    xchgb         %dh,                          %dl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %dl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_di
_gadget_or8_reg_di:
                    xchgb         %bh,                          %bl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %bl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_sp
_gadget_or8_reg_sp:
                    xchgb         %ah,                          %al
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %al,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or8_reg_bp
_gadget_or8_reg_bp:
                    xchgb         %ch,                          %cl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orb           %cl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_imm
_gadget_or16_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           (%r9),                        %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_mem
_gadget_or16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x3b6e
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x3b87
            addq          0x8(%r12,%r14),               %r13

.global back_or16_mem
back_or16_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
            orw           (%r13),                       %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_a
_gadget_or16_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %ax,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_b
_gadget_or16_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %bx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_c
_gadget_or16_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %cx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_d
_gadget_or16_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %dx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_si
_gadget_or16_reg_si:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %si,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_di
_gadget_or16_reg_di:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %di,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_sp
_gadget_or16_reg_sp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %r8w,                         %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or16_reg_bp
_gadget_or16_reg_bp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orw           %bp,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_imm
_gadget_or32_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           (%r9),                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_mem
_gadget_or32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x3e6d
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x3e86
            addq          0x8(%r12,%r14),               %r13

.global back_or32_mem
back_or32_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           (%r13),                       %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_a
_gadget_or32_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %eax,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_b
_gadget_or32_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %ebx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_c
_gadget_or32_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %ecx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_d
_gadget_or32_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %edx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_si
_gadget_or32_reg_si:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %esi,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_di
_gadget_or32_reg_di:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %edi,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_sp
_gadget_or32_reg_sp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %r8d,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_or32_reg_bp
_gadget_or32_reg_bp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                orl           %ebp,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_imm
_gadget_xor8_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          (%r9),                        %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_mem
_gadget_xor8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x4143
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x415c
            addq          0x8(%r12,%r14),               %r13

.global back_xor8_mem
back_xor8_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          (%r13),                       %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_a
_gadget_xor8_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %al,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_b
_gadget_xor8_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %bl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_c
_gadget_xor8_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %cl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_d
_gadget_xor8_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %dl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_si
_gadget_xor8_reg_si:
                    xchgb         %dh,                          %dl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %dl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %dh,                          %dl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_di
_gadget_xor8_reg_di:
                    xchgb         %bh,                          %bl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %bl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %bh,                          %bl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_sp
_gadget_xor8_reg_sp:
                    xchgb         %ah,                          %al
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %al,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ah,                          %al
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor8_reg_bp
_gadget_xor8_reg_bp:
                    xchgb         %ch,                          %cl
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorb          %cl,                          %r10b
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                    xchgb         %ch,                          %cl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_imm
_gadget_xor16_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          (%r9),                        %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_mem
_gadget_xor16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x444e
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x4467
            addq          0x8(%r12,%r14),               %r13

.global back_xor16_mem
back_xor16_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
            xorw          (%r13),                       %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_a
_gadget_xor16_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %ax,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_b
_gadget_xor16_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %bx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_c
_gadget_xor16_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %cx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_d
_gadget_xor16_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %dx,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_si
_gadget_xor16_reg_si:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %si,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_di
_gadget_xor16_reg_di:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %di,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_sp
_gadget_xor16_reg_sp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %r8w,                         %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor16_reg_bp
_gadget_xor16_reg_bp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorw          %bp,                          %r10w
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_imm
_gadget_xor32_imm:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          (%r9),                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_mem
_gadget_xor32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x474d
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x4766
            addq          0x8(%r12,%r14),               %r13

.global back_xor32_mem
back_xor32_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          (%r13),                       %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_a
_gadget_xor32_reg_a:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %eax,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_b
_gadget_xor32_reg_b:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %ebx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_c
_gadget_xor32_reg_c:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %ecx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_d
_gadget_xor32_reg_d:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %edx,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_si
_gadget_xor32_reg_si:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %esi,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_di
_gadget_xor32_reg_di:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %edi,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_sp
_gadget_xor32_reg_sp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %r8d,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_xor32_reg_bp
_gadget_xor32_reg_bp:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                xorl          %ebp,                         %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_imm
_gadget_imul16_imm:
            imulw         (%r9),                        %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_mem
_gadget_imul16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x49fc
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x4a15
            addq          0x8(%r12,%r14),               %r13

.global back_imul16_mem
back_imul16_mem:
            imulw         (%r13),                       %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_a
_gadget_imul16_reg_a:
            imulw         %ax,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_b
_gadget_imul16_reg_b:
            imulw         %bx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_c
_gadget_imul16_reg_c:
            imulw         %cx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_d
_gadget_imul16_reg_d:
            imulw         %dx,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_si
_gadget_imul16_reg_si:
            imulw         %si,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_di
_gadget_imul16_reg_di:
            imulw         %di,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_sp
_gadget_imul16_reg_sp:
            imulw         %r8w,                         %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul16_reg_bp
_gadget_imul16_reg_bp:
            imulw         %bp,                          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_imm
_gadget_imul32_imm:
                imull         (%r9),                        %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_mem
_gadget_imul32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x4b6f
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x4b88
            addq          0x8(%r12,%r14),               %r13

.global back_imul32_mem
back_imul32_mem:
            imull         (%r13),                       %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_a
_gadget_imul32_reg_a:
                imull         %eax,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_b
_gadget_imul32_reg_b:
                imull         %ebx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_c
_gadget_imul32_reg_c:
                imull         %ecx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_d
_gadget_imul32_reg_d:
                imull         %edx,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_si
_gadget_imul32_reg_si:
                imull         %esi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_di
_gadget_imul32_reg_di:
                imull         %edi,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_sp
_gadget_imul32_reg_sp:
                imull         %r8d,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul32_reg_bp
_gadget_imul32_reg_bp:
                imull         %ebp,                         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_imm
_gadget_bsf16_imm:
            bsfw          (%r9),                        %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_mem
_gadget_bsf16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x4ce9
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x4d02
            addq          0x8(%r12,%r14),               %r13

.global back_bsf16_mem
back_bsf16_mem:
            bsfw          (%r13),                       %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_a
_gadget_bsf16_reg_a:
            bsfw          %ax,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_b
_gadget_bsf16_reg_b:
            bsfw          %bx,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_c
_gadget_bsf16_reg_c:
            bsfw          %cx,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_d
_gadget_bsf16_reg_d:
            bsfw          %dx,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_si
_gadget_bsf16_reg_si:
            bsfw          %si,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_di
_gadget_bsf16_reg_di:
            bsfw          %di,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_sp
_gadget_bsf16_reg_sp:
            bsfw          %r8w,                         %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf16_reg_bp
_gadget_bsf16_reg_bp:
            bsfw          %bp,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_imm
_gadget_bsf32_imm:
                bsfl          (%r9),                        %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_mem
_gadget_bsf32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x4ef2
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x4f0b
            addq          0x8(%r12,%r14),               %r13

.global back_bsf32_mem
back_bsf32_mem:
            bsfl          (%r13),                       %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_a
_gadget_bsf32_reg_a:
                bsfl          %eax,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_b
_gadget_bsf32_reg_b:
                bsfl          %ebx,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_c
_gadget_bsf32_reg_c:
                bsfl          %ecx,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_d
_gadget_bsf32_reg_d:
                bsfl          %edx,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_si
_gadget_bsf32_reg_si:
                bsfl          %esi,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_di
_gadget_bsf32_reg_di:
                bsfl          %edi,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_sp
_gadget_bsf32_reg_sp:
                bsfl          %r8d,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsf32_reg_bp
_gadget_bsf32_reg_bp:
                bsfl          %ebp,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_imm
_gadget_bsr16_imm:
            bsrw          (%r9),                        %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_mem
_gadget_bsr16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x50f3
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x510c
            addq          0x8(%r12,%r14),               %r13

.global back_bsr16_mem
back_bsr16_mem:
            bsrw          (%r13),                       %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_a
_gadget_bsr16_reg_a:
            bsrw          %ax,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_b
_gadget_bsr16_reg_b:
            bsrw          %bx,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_c
_gadget_bsr16_reg_c:
            bsrw          %cx,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_d
_gadget_bsr16_reg_d:
            bsrw          %dx,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_si
_gadget_bsr16_reg_si:
            bsrw          %si,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_di
_gadget_bsr16_reg_di:
            bsrw          %di,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_sp
_gadget_bsr16_reg_sp:
            bsrw          %r8w,                         %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr16_reg_bp
_gadget_bsr16_reg_bp:
            bsrw          %bp,                          %r10w
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_imm
_gadget_bsr32_imm:
                bsrl          (%r9),                        %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_mem
_gadget_bsr32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x52fc
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
                cmpl          (%r12,%r14),                  %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5315
            addq          0x8(%r12,%r14),               %r13

.global back_bsr32_mem
back_bsr32_mem:
            bsrl          (%r13),                       %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_a
_gadget_bsr32_reg_a:
                bsrl          %eax,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_b
_gadget_bsr32_reg_b:
                bsrl          %ebx,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_c
_gadget_bsr32_reg_c:
                bsrl          %ecx,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_d
_gadget_bsr32_reg_d:
                bsrl          %edx,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_si
_gadget_bsr32_reg_si:
                bsrl          %esi,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_di
_gadget_bsr32_reg_di:
                bsrl          %edi,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_sp
_gadget_bsr32_reg_sp:
                bsrl          %r8d,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_bsr32_reg_bp
_gadget_bsr32_reg_bp:
                bsrl          %ebp,                         %r10d
                sete          %r14b
        andb          $-0x41,                       0xb4(%r11)
                shlb          $0x6,                         %r14b
        orb           %r14b,                        0xb4(%r11)
        andl          $-0x3,                        0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_add8_mem
_gadget_atomic_add8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x54d1
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x54eb
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_add8_mem
back_atomic_add8_mem:
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movb          %r10b,                        0xc4(%r11)
        movb          %r14b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x54f6
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5556

.global back_write_done_atomic_add8_mem
back_write_done_atomic_add8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_add16_mem
_gadget_atomic_add16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x5591
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x55ab
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_add16_mem
back_atomic_add16_mem:
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movw          %r10w,                        0xc4(%r11)
        movw          %r14w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x55b7
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x561b

.global back_write_done_atomic_add16_mem
back_write_done_atomic_add16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_add32_mem
_gadget_atomic_add32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x5656
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5670
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_add32_mem
back_atomic_add32_mem:
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movl          %r10d,                        0xc4(%r11)
        movl          %r14d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x567b
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x56d7

.global back_write_done_atomic_add32_mem
back_write_done_atomic_add32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_sub8_mem
_gadget_atomic_sub8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x5712
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x572c
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_sub8_mem
back_atomic_sub8_mem:
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movb          %r10b,                        0xc4(%r11)
        movb          %r14b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subb          %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x5737
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5797

.global back_write_done_atomic_sub8_mem
back_write_done_atomic_sub8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_sub16_mem
_gadget_atomic_sub16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x57d2
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x57ec
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_sub16_mem
back_atomic_sub16_mem:
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movw          %r10w,                        0xc4(%r11)
        movw          %r14w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subw          %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x57f8
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x585c

.global back_write_done_atomic_sub16_mem
back_write_done_atomic_sub16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_sub32_mem
_gadget_atomic_sub32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x5897
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x58b1
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_sub32_mem
back_atomic_sub32_mem:
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movl          %r10d,                        0xc4(%r11)
        movl          %r14d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                subl          %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x58bc
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5918

.global back_write_done_atomic_sub32_mem
back_write_done_atomic_sub32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_adc8_mem
_gadget_atomic_adc8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x5953
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x596d
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_adc8_mem
back_atomic_adc8_mem:
    btw           $0x0,                         0xbc(%r11)
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movb          %r10b,                        0xc4(%r11)
        movb          %r14b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                adcb          %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x5982
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x59e2

.global back_write_done_atomic_adc8_mem
back_write_done_atomic_adc8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_adc16_mem
_gadget_atomic_adc16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x5a1d
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5a37
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_adc16_mem
back_atomic_adc16_mem:
    btw           $0x0,                         0xbc(%r11)
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movw          %r10w,                        0xc4(%r11)
        movw          %r14w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                adcw          %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x5a4d
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5ab1

.global back_write_done_atomic_adc16_mem
back_write_done_atomic_adc16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_adc32_mem
_gadget_atomic_adc32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x5aec
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5b06
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_adc32_mem
back_atomic_adc32_mem:
    btw           $0x0,                         0xbc(%r11)
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movl          %r10d,                        0xc4(%r11)
        movl          %r14d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                adcl          %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x5b1b
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5b77

.global back_write_done_atomic_adc32_mem
back_write_done_atomic_adc32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_sbb8_mem
_gadget_atomic_sbb8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x5bb2
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5bcc
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_sbb8_mem
back_atomic_sbb8_mem:
    btw           $0x0,                         0xbc(%r11)
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movb          %r10b,                        0xc4(%r11)
        movb          %r14b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                sbbb          %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x5be1
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5c41

.global back_write_done_atomic_sbb8_mem
back_write_done_atomic_sbb8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_sbb16_mem
_gadget_atomic_sbb16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x5c7c
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5c96
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_sbb16_mem
back_atomic_sbb16_mem:
    btw           $0x0,                         0xbc(%r11)
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movw          %r10w,                        0xc4(%r11)
        movw          %r14w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                sbbw          %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x5cac
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5d10

.global back_write_done_atomic_sbb16_mem
back_write_done_atomic_sbb16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_sbb32_mem
_gadget_atomic_sbb32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x5d4b
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5d65
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_sbb32_mem
back_atomic_sbb32_mem:
    btw           $0x0,                         0xbc(%r11)
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movl          %r10d,                        0xc4(%r11)
        movl          %r14d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                sbbl          %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x5d7a
                movq          %r15,                         %rax
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5dd6

.global back_write_done_atomic_sbb32_mem
back_write_done_atomic_sbb32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_and8_mem
_gadget_atomic_and8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x5e11
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5e2b
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_and8_mem
back_atomic_and8_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                andb          %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x5e5c
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5e96

.global back_write_done_atomic_and8_mem
back_write_done_atomic_and8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_and16_mem
_gadget_atomic_and16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x5ed1
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5eeb
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_and16_mem
back_atomic_and16_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                andw          %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x5f1d
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x5f59

.global back_write_done_atomic_and16_mem
back_write_done_atomic_and16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_and32_mem
_gadget_atomic_and32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x5f94
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x5fae
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_and32_mem
back_atomic_and32_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                andl          %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x5fdf
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x6015

.global back_write_done_atomic_and32_mem
back_write_done_atomic_and32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_or8_mem
_gadget_atomic_or8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x6050
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x606a
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_or8_mem
back_atomic_or8_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                orb           %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x609b
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x60d5

.global back_write_done_atomic_or8_mem
back_write_done_atomic_or8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_or16_mem
_gadget_atomic_or16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x6110
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x612a
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_or16_mem
back_atomic_or16_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                orw           %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x615c
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x6198

.global back_write_done_atomic_or16_mem
back_write_done_atomic_or16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_or32_mem
_gadget_atomic_or32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x61d3
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x61ed
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_or32_mem
back_atomic_or32_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                orl           %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x621e
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x6254

.global back_write_done_atomic_or32_mem
back_write_done_atomic_or32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_xor8_mem
_gadget_atomic_xor8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x628f
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x62a9
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_xor8_mem
back_atomic_xor8_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                xorb          %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x62da
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x6314

.global back_write_done_atomic_xor8_mem
back_write_done_atomic_xor8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_xor16_mem
_gadget_atomic_xor16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x634f
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6369
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_xor16_mem
back_atomic_xor16_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                xorw          %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x639b
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x63d7

.global back_write_done_atomic_xor16_mem
back_write_done_atomic_xor16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_xor32_mem
_gadget_atomic_xor32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x6412
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x642c
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_xor32_mem
back_atomic_xor32_mem:
        andl          $-0x11,                       0xb4(%r11)
        andl          $-0x9,                        0xcc(%r11)
movl          $0x0,                         0xbd(%r11)
movl          $0x0,                         0xbc(%r11)
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
                xorl          %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x645d
                movq          %r15,                         %rax
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x6493

.global back_write_done_atomic_xor32_mem
back_write_done_atomic_xor32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_inc8_mem
_gadget_atomic_inc8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x64ce
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x64e8
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_inc8_mem
back_atomic_inc8_mem:
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movb          $0x1,                         0xc4(%r11)
        movb          %r14b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                incb          %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x64f3
                movq          %r15,                         %rax
        seto          0xbd(%r11)
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x654c

.global back_write_done_atomic_inc8_mem
back_write_done_atomic_inc8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_inc16_mem
_gadget_atomic_inc16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x6587
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x65a1
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_inc16_mem
back_atomic_inc16_mem:
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
    movw          $0x1,                         0xc4(%r11)
        movw          %r14w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                incw          %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x65ad
                movq          %r15,                         %rax
        seto          0xbd(%r11)
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x660b

.global back_write_done_atomic_inc16_mem
back_write_done_atomic_inc16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_inc32_mem
_gadget_atomic_inc32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x6646
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6660
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_inc32_mem
back_atomic_inc32_mem:
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
movl          $0x1,                         0xc4(%r11)
        movl          %r14d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                incl          %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x666b
                movq          %r15,                         %rax
        seto          0xbd(%r11)
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x66c3

.global back_write_done_atomic_inc32_mem
back_write_done_atomic_inc32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_dec8_mem
_gadget_atomic_dec8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x66fe
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6718
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_dec8_mem
back_atomic_dec8_mem:
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
        movb          $0x1,                         0xc4(%r11)
        movb          %r14b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                decb          %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x6723
                movq          %r15,                         %rax
        seto          0xbd(%r11)
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x677c

.global back_write_done_atomic_dec8_mem
back_write_done_atomic_dec8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_dec16_mem
_gadget_atomic_dec16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x67b7
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x67d1
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_dec16_mem
back_atomic_dec16_mem:
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
    movw          $0x1,                         0xc4(%r11)
        movw          %r14w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                decw          %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x67dd
                movq          %r15,                         %rax
        seto          0xbd(%r11)
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x683b

.global back_write_done_atomic_dec16_mem
back_write_done_atomic_dec16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_dec32_mem
_gadget_atomic_dec32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x6876
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6890
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_dec32_mem
back_atomic_dec32_mem:
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                movq          %rax,                         %r14
movl          $0x1,                         0xc4(%r11)
        movl          %r14d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                decl          %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x689b
                movq          %r15,                         %rax
        seto          0xbd(%r11)
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x68f3

.global back_write_done_atomic_dec32_mem
back_write_done_atomic_dec32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_xadd8_mem
_gadget_atomic_xadd8_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xfff,                       %r15d
            ja            0x692e
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6948
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_xadd8_mem
back_atomic_xadd8_mem:
                movb          (%r13),                       %r15b
                    xchgq         %r15,                         %rax
                    pushq         %r10
                movq          %rax,                         %r14
                movq          (%rsp),                       %r10
                xchgq         %r10,                         %r14
        movb          %r10b,                        0xc4(%r11)
        movb          %r14b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addb          %r10b,                        %r14b
                    lock
            cmpxchgb      %r14b,                        (%r13)
                    jne           0x6955
                movq          %r15,                         %rax
                addq          $0x8,                         %rsp
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x69c0

.global back_write_done_atomic_xadd8_mem
back_write_done_atomic_xadd8_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_xadd16_mem
_gadget_atomic_xadd16_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffe,                       %r15d
            ja            0x69fb
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6a15
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_xadd16_mem
back_atomic_xadd16_mem:
            movw          (%r13),                       %r15w
                    xchgq         %r15,                         %rax
                    pushq         %r10
                movq          %rax,                         %r14
                movq          (%rsp),                       %r10
                xchgq         %r10,                         %r14
        movw          %r10w,                        0xc4(%r11)
        movw          %r14w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addw          %r10w,                        %r14w
        lock          cmpxchgw                      %r14w, (%r13)
                    jne           0x6a23
                movq          %r15,                         %rax
                addq          $0x8,                         %rsp
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x6a92

.global back_write_done_atomic_xadd16_mem
back_write_done_atomic_xadd16_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_atomic_xadd32_mem
_gadget_atomic_xadd32_mem:
                movl          %r13d,                        %r14d
                shrl          $0xc,                         %r14d
        andl          $0x3ff,                       %r14d
                movl          %r13d,                        %r15d
                shrl          $0x16,                        %r15d
                xorl          %r15d,                        %r14d
                shll          $0x4,                         %r14d
                movl          %r13d,                        %r15d
        andl          $0xfff,                       %r15d
        cmpl          $0xffc,                       %r15d
            ja            0x6acd
                movl          %r13d,                        %r15d
        andl          $0xfffff000,                  %r15d
            cmpl          0x4(%r12,%r14),               %r15d
            movl          %r15d,                        -0x8(%r12)
            jne           0x6ae7
            addq          0x8(%r12,%r14),               %r13

.global back_atomic_xadd32_mem
back_atomic_xadd32_mem:
                movl          (%r13),                       %r15d
                    xchgq         %r15,                         %rax
                    pushq         %r10
                movq          %rax,                         %r14
                movq          (%rsp),                       %r10
                xchgq         %r10,                         %r14
        movl          %r10d,                        0xc4(%r11)
        movl          %r14d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                addl          %r10d,                        %r14d
                    lock
            cmpxchgl      %r14d,                        (%r13)
                    jne           0x6af4
                movq          %r15,                         %rax
                addq          $0x8,                         %rsp
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                xchgq         %r14,                         %r10
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                xchgq         %r14,                         %r10
        leaq          0x178(%r11),                  %r14
                cmpq          %r13,                         %r14
            je            0x6b5b

.global back_write_done_atomic_xadd32_mem
back_write_done_atomic_xadd32_mem:
                addq          $0x10,                        %r9
                jmpq          *-0x8(%r9)

.global _gadget_inc_8
_gadget_inc_8:
        movb          $0x1,                         0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                incb          %r10b
        seto          0xbd(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_inc_16
_gadget_inc_16:
    movw          $0x1,                         0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                incw          %r10w
        seto          0xbd(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_inc_32
_gadget_inc_32:
movl          $0x1,                         0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                incl          %r10d
        seto          0xbd(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_dec_8
_gadget_dec_8:
        movb          $0x1,                         0xc4(%r11)
        movb          %r10b,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                decb          %r10b
        seto          0xbd(%r11)
                movsbl        %r10b,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_dec_16
_gadget_dec_16:
    movw          $0x1,                         0xc4(%r11)
        movw          %r10w,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                decw          %r10w
        seto          0xbd(%r11)
                movswl        %r10w,                        %r10d
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_dec_32
_gadget_dec_32:
movl          $0x1,                         0xc4(%r11)
        movl          %r10d,                        0xc8(%r11)
        orl           $0x8,                         0xcc(%r11)
                decl          %r10d
        seto          0xbd(%r11)
        movl          %r10d,                        0xc0(%r11)
        orl           $0x7,                         0xcc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sign_extend_8
_gadget_sign_extend_8:
                movsbl        %r10b,                        %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sign_extend_16
_gadget_sign_extend_16:
                movswl        %r10w,                        %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_sign_extend_32
_gadget_sign_extend_32:
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_zero_extend_8
_gadget_zero_extend_8:
                movzbl        %r10b,                        %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_zero_extend_16
_gadget_zero_extend_16:
                movzwl        %r10w,                        %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_zero_extend_32
_gadget_zero_extend_32:
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_div_8
_gadget_div_8:
                divb          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_div_16
_gadget_div_16:
                divw          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_div_32
_gadget_div_32:
                divl          %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_idiv_8
_gadget_idiv_8:
                idivb         %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_idiv_16
_gadget_idiv_16:
                idivw         %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_idiv_32
_gadget_idiv_32:
                idivl         %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_mul_8
_gadget_mul_8:
                mulb          %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_mul_16
_gadget_mul_16:
                mulw          %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_mul_32
_gadget_mul_32:
                mull          %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul1_8
_gadget_imul1_8:
                imulb         %r10b
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul1_16
_gadget_imul1_16:
                imulw         %r10w
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_imul1_32
_gadget_imul1_32:
                imull         %r10d
        seto          0xbd(%r11)
        setb          0xbc(%r11)
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_not_8
_gadget_not_8:
                notb          %r10b
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_not_16
_gadget_not_16:
                notw          %r10w
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_not_32
_gadget_not_32:
                notl          %r10d
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_cvt_16
_gadget_cvt_16:
                    cwtd
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_cvt_32
_gadget_cvt_32:
                    cltd
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_cvte_16
_gadget_cvte_16:
                    cbtw
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)

.global _gadget_cvte_32
_gadget_cvte_32:
                    cwtl
                addq          $0x8,                         %r9
                jmpq          *-0x8(%r9)
